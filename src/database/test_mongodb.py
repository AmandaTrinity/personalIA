#!/usr/bin/env python3
"""
Teste SIMPLES MongoDB - Opera√ß√µes B√°sicas
"""
import os
from datetime import datetime

from dotenv import load_dotenv
from pymongo.mongo_client import MongoClient
from pymongo.server_api import ServerApi

# Carregar vari√°veis de ambiente
load_dotenv()

# Carregar configura√ß√µes do .env
uri = os.getenv("MONGO_URI")
if not uri:
    print("‚ùå MONGO_URI n√£o configurada no arquivo .env!")
    print("Configure a vari√°vel MONGO_URI no arquivo .env")
    exit(1)

database_name = os.getenv("DATABASE_NAME", "personalai_db")

print("üîç Testando opera√ß√µes b√°sicas no MongoDB...")

try:
    # Conectar
    client = MongoClient(uri, server_api=ServerApi("1"))
    db = client[database_name]

    print("‚úÖ Conectado ao MongoDB Atlas!")

    # 1Ô∏è‚É£ COLOCAR algo no database
    print("\n1. üü¢ COLOCANDO dados no database...")
    treino_data = {
        "user_id": "usuario_teste",
        "titulo": "Treino de Teste - Peito",
        "tempo": 45,
        "tipo": "muscula√ß√£o",
        "nivel": "iniciante",
        "objetivo": "teste",
        "exercicios": ["Supino", "Flex√£o", "Crucifixo"],
        "data": datetime.now().strftime("%Y-%m-%d"),
        "created_at": datetime.now(),
    }

    result = db.treinos.insert_one(treino_data)
    print(f"   ‚úÖ Dados INSERIDOS! ID: {result.inserted_id}")

    # 2Ô∏è‚É£ BUSCAR algo no database
    print("\n2. üîç BUSCANDO dados no database...")
    treino_encontrado = db.treinos.find_one({"_id": result.inserted_id})
    if treino_encontrado:
        print("   ‚úÖ Dados ENCONTRADOS!")
        print(f"      T√≠tulo: {treino_encontrado['titulo']}")
        print(f"      Tempo: {treino_encontrado['tempo']}min")
        print(f"      Exerc√≠cios: {', '.join(treino_encontrado['exercicios'])}")
    else:
        print("   ‚ùå Dados N√ÉO encontrados")

    # 3Ô∏è‚É£ PEGAR v√°rios itens do database
    print("\n3. üì¶ PEGANDO v√°rios dados do database...")
    todos_treinos = list(db.treinos.find({"user_id": "usuario_teste"}))
    print(f"   ‚úÖ Encontrados {len(todos_treinos)} treinos do usu√°rio")

    # 4Ô∏è‚É£ ATUALIZAR dados
    print("\n4. ‚úèÔ∏è ATUALIZANDO dados no database...")
    update_result = db.treinos.update_one(
        {"_id": result.inserted_id}, {"$set": {"tempo": 60, "status": "completado"}}
    )
    print(f"   ‚úÖ Dados ATUALIZADOS! Modificados: {update_result.modified_count}")

    # 5Ô∏è‚É£ DELETAR dados (limpeza)
    print("\n5. üóëÔ∏è DELETANDO dados de teste...")
    delete_result = db.treinos.delete_one({"_id": result.inserted_id})
    print(f"   ‚úÖ Dados DELETADOS! Removidos: {delete_result.deleted_count}")

    client.close()

    print("\nüéâ TODAS AS OPERA√á√ïES B√ÅSICAS FUNCIONAM!")
    print("   ‚úÖ COLOCAR - Funciona")
    print("   ‚úÖ BUSCAR - Funciona")
    print("   ‚úÖ PEGAR - Funciona")
    print("   ‚úÖ ATUALIZAR - Funciona")
    print("   ‚úÖ DELETAR - Funciona")

except Exception as e:
    print(f"‚ùå ERRO: {e}")
